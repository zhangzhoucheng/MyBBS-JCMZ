<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jcmz.mapper.BlockMapper">
  <resultMap id="BaseResultMap" type="com.jcmz.model.Block">
    <id column="block_id" jdbcType="INTEGER" property="id" />
    <result column="blockName" jdbcType="VARCHAR" property="blockname" />
    <result column="blockRemark" jdbcType="VARCHAR" property="blockremark" />
    <result column="blockStatus" jdbcType="INTEGER" property="blockstatus" />
    <result column="pageId" jdbcType="INTEGER" property="pageid" />
    <result column="countNum" jdbcType="INTEGER" property="countNum"/>
    <collection property="posts" ofType="com.jcmz.model.Post" resultMap="com.jcmz.mapper.PostMapper.BaseResultMap"></collection>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, blockName, blockRemark, blockStatus, pageId
  </sql>
  <select id="getBlocksByPid" resultMap="BaseResultMap">
  	select b.id as block_id,b.blockName,b.blockRemark,b.blockStatus,b.pageId,b.countNum,p.*  from (select * from tb_block t where t.pageId=#{0} and t.blockStatus !=0) b left join tb_post p on b.id=p.blockTypeId order by b.countNum desc,b.id,p.postIsFocus desc
  </select>
  
  <select id="selectByExample" parameterType="com.jcmz.model.BlockExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_block
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_block
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_block
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jcmz.model.BlockExample">
    delete from tb_block
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jcmz.model.Block">
    insert into tb_block (id, blockName, blockRemark, 
      blockStatus, pageId)
    values (#{id,jdbcType=INTEGER}, #{blockname,jdbcType=VARCHAR}, #{blockremark,jdbcType=VARCHAR}, 
      #{blockstatus,jdbcType=INTEGER}, #{pageid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jcmz.model.Block">
    insert into tb_block
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="blockname != null">
        blockName,
      </if>
      <if test="blockremark != null">
        blockRemark,
      </if>
      <if test="blockstatus != null">
        blockStatus,
      </if>
      <if test="pageid != null">
        pageId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="blockname != null">
        #{blockname,jdbcType=VARCHAR},
      </if>
      <if test="blockremark != null">
        #{blockremark,jdbcType=VARCHAR},
      </if>
      <if test="blockstatus != null">
        #{blockstatus,jdbcType=INTEGER},
      </if>
      <if test="pageid != null">
        #{pageid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jcmz.model.BlockExample" resultType="java.lang.Long">
    select count(*) from tb_block
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_block
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.blockname != null">
        blockName = #{record.blockname,jdbcType=VARCHAR},
      </if>
      <if test="record.blockremark != null">
        blockRemark = #{record.blockremark,jdbcType=VARCHAR},
      </if>
      <if test="record.blockstatus != null">
        blockStatus = #{record.blockstatus,jdbcType=INTEGER},
      </if>
      <if test="record.pageid != null">
        pageId = #{record.pageid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_block
    set id = #{record.id,jdbcType=INTEGER},
      blockName = #{record.blockname,jdbcType=VARCHAR},
      blockRemark = #{record.blockremark,jdbcType=VARCHAR},
      blockStatus = #{record.blockstatus,jdbcType=INTEGER},
      pageId = #{record.pageid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jcmz.model.Block">
    update tb_block
    <set>
      <if test="blockname != null">
        blockName = #{blockname,jdbcType=VARCHAR},
      </if>
      <if test="blockremark != null">
        blockRemark = #{blockremark,jdbcType=VARCHAR},
      </if>
      <if test="blockstatus != null">
        blockStatus = #{blockstatus,jdbcType=INTEGER},
      </if>
      <if test="pageid != null">
        pageId = #{pageid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jcmz.model.Block">
    update tb_block
    set blockName = #{blockname,jdbcType=VARCHAR},
      blockRemark = #{blockremark,jdbcType=VARCHAR},
      blockStatus = #{blockstatus,jdbcType=INTEGER},
      pageId = #{pageid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>